% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmcmc_parameters.R
\name{pmcmc_parameters}
\alias{pmcmc_parameters}
\title{pmcmc_parameters}
\description{
Construct parameters for use with
\code{\link[=pmcmc]{pmcmc()}}. This creates a utility object that is used
internally to work with parameters. Most users only need to
construct this object, but see the examples for how it can be
used.
}
\examples{
# Construct an object with two parameters:
pars <- mcstate::pmcmc_parameters$new(
  list(mcstate::pmcmc_parameter("a", 0.1, min = 0, max = 1,
                                prior = function(a) log(a)),
       mcstate::pmcmc_parameter("b", 0, prior = dnorm)),
  matrix(c(1, 0.5, 0.5, 2), 2, 2))

# Initial parameters
p <- pars$initial()
p

# Propose a new parameter point
pars$propose(p)

# Information about parameters:
pars$names()
pars$summary()

# Compute prior
pars$prior(p)

# Transform data for your model
pars$model(p)
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{pmcmc_parameters$new()}}
\item \href{#method-initial}{\code{pmcmc_parameters$initial()}}
\item \href{#method-mean}{\code{pmcmc_parameters$mean()}}
\item \href{#method-vcv}{\code{pmcmc_parameters$vcv()}}
\item \href{#method-names}{\code{pmcmc_parameters$names()}}
\item \href{#method-summary}{\code{pmcmc_parameters$summary()}}
\item \href{#method-prior}{\code{pmcmc_parameters$prior()}}
\item \href{#method-propose}{\code{pmcmc_parameters$propose()}}
\item \href{#method-model}{\code{pmcmc_parameters$model()}}
\item \href{#method-fix}{\code{pmcmc_parameters$fix()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create the pmcmc_parameters object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$new(parameters, proposal, transform = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parameters}}{A \code{list} of
\link{pmcmc_parameter} objects, each of which describe a
single parameter in your model. If \code{parameters} is named, then
these names must match the \verb{$name} element of each parameter is
used (this is verified).}

\item{\code{proposal}}{A square proposal distribution corresponding to the
variance-covariance matrix of a multivariate gaussian distribution
used to generate new parameters. It must have the same number of
rows and columns as there are elements in \code{parameters}, and if
named the names must correspond exactly to the names in
\code{parameters}. Because it corresponds to a variance-covariance
matrix it must be symmetric and positive definite.}

\item{\code{transform}}{An optional transformation function to apply
to your parameter vector immediately before passing it to the
model function. If not given, then \link{as.list} is
used, as dust models require this. However, if t you need to
generate derived parameters from those being actively sampled
you can do arbitrary transformations here.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-initial"></a>}}
\if{latex}{\out{\hypertarget{method-initial}{}}}
\subsection{Method \code{initial()}}{
Return the initial parameter values as a named numeric
vector
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$initial()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mean"></a>}}
\if{latex}{\out{\hypertarget{method-mean}{}}}
\subsection{Method \code{mean()}}{
Return the estimate of the mean of the parameters,
as set when created (this is not updated by any fitting!)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$mean()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-vcv"></a>}}
\if{latex}{\out{\hypertarget{method-vcv}{}}}
\subsection{Method \code{vcv()}}{
Return the variance-covariance matrix used for the
proposal.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$vcv()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-names"></a>}}
\if{latex}{\out{\hypertarget{method-names}{}}}
\subsection{Method \code{names()}}{
Return the names of the parameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$names()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summary"></a>}}
\if{latex}{\out{\hypertarget{method-summary}{}}}
\subsection{Method \code{summary()}}{
Return a \code{data.frame} with information about
parameters (name, min, max, and integer).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prior"></a>}}
\if{latex}{\out{\hypertarget{method-prior}{}}}
\subsection{Method \code{prior()}}{
Compute the prior for a parameter vector
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$prior(theta)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{a parameter vector in the same order as your
parameters were defined in (see \verb{$names()} for that order.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-propose"></a>}}
\if{latex}{\out{\hypertarget{method-propose}{}}}
\subsection{Method \code{propose()}}{
Propose a new parameter vector given a current parameter
vector. This proposes a new parameter vector given your current
vector and the variance-covariance matrix of your proposal
kernel, rounds any integer values, and reflects bounded
parameters until they lie within \code{min}:\code{max}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$propose(theta, scale = 1, vcv = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{a parameter vector in the same order as your
parameters were defined in (see \verb{$names()} for that order.}

\item{\code{scale}}{an optional scaling factor to apply to the
proposal distribution. This may be useful in sampling starting
points. The parameter is equivalent to a multiplicative factor
applied to the variance covariance matrix.}

\item{\code{vcv}}{A variance covariance matrix of the correct size,
overriding the proposal matrix built into the parameters object.
This will be slightly less efficient but allow a different proposal
matrix to be used (e.g., during an adaptive MCMC)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-model"></a>}}
\if{latex}{\out{\hypertarget{method-model}{}}}
\subsection{Method \code{model()}}{
Apply the model transformation function to a parameter
vector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$model(theta)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{a parameter vector in the same order as your
parameters were defined in (see \verb{$names()} for that order.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fix"></a>}}
\if{latex}{\out{\hypertarget{method-fix}{}}}
\subsection{Method \code{fix()}}{
Set some parameters to fixed values. Use this to
reduce the dimensionality of your system.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters$fix(fixed)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fixed}}{a named vector of parameters to fix}
}
\if{html}{\out{</div>}}
}
}
}
