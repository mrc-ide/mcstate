% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmcmc_parameters_nested.R
\name{pmcmc_parameters_nested}
\alias{pmcmc_parameters_nested}
\title{pmcmc_parameters_nested}
\description{
Construct nested parameters for use with
\code{\link[=pmcmc]{pmcmc()}}. This creates a utility object that is used
internally to work with parameters that may be fixed and the same for all
given populations, or varied and possibly-different between populations.
Most users only need to construct this object, but see the examples for
how it can be used.
}
\examples{
#Construct an object with two varied parameters, two fixed parameters,
#and two populations:
parameters <- list(pmcmc_varied_parameter("a", c("p1", "p2"), 2),
                   pmcmc_varied_parameter("b", c("p1", "p2"), 2),
                   pmcmc_parameter("c", 3),
                   pmcmc_parameter("d", 4))
proposal_fixed <- diag(2)
proposal_varied <- diag(2) + 1
pars <- mcstate::pmcmc_parameters_nested$new(parameters, proposal_varied,
                                             proposal_fixed)

# Initial parameters
p <- pars$initial()
p

# Propose a new parameter point
pars$propose(p, type = "both")

# Information about parameters:
pars$names()
pars$summary()

# Compute prior
pars$prior(p)

# Transform data for your model
pars$model(p)
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{pmcmc_parameters_nested$new()}}
\item \href{#method-names}{\code{pmcmc_parameters_nested$names()}}
\item \href{#method-populations}{\code{pmcmc_parameters_nested$populations()}}
\item \href{#method-summary}{\code{pmcmc_parameters_nested$summary()}}
\item \href{#method-initial}{\code{pmcmc_parameters_nested$initial()}}
\item \href{#method-prior}{\code{pmcmc_parameters_nested$prior()}}
\item \href{#method-propose}{\code{pmcmc_parameters_nested$propose()}}
\item \href{#method-model}{\code{pmcmc_parameters_nested$model()}}
\item \href{#method-fix}{\code{pmcmc_parameters_nested$fix()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create the pmcmc_parameters object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$new(
  parameters,
  proposal_varied = NULL,
  proposal_fixed = NULL,
  populations = NULL,
  transform = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parameters}}{A \code{list} of
\link{pmcmc_parameter} or \link{pmcmc_varied_parameter} objects, each of which
describe a single (possibly-varying) parameter in your model.
If \code{parameters} is named, then these names must match the \verb{$name}
element of each parameter that is used (this is verified).}

\item{\code{proposal_varied, proposal_fixed}}{Square proposal matrices
corresponding to the variance-covariance matrix of a multivariate
gaussian distribution used to generate new varied and fixed parameters
respectively.'. They must have the same number of
rows and columns as there are varied and fixed parameters respectively.
The names must correspond exactly to the names in
\code{parameters}. Because it corresponds to a variance-covariance
matrix it must be symmetric and positive definite.}

\item{\code{populations}}{Specifies the names of the different populations
that the varying parameters change according to. Only required if no
\link{pmcmc_varied_parameter} objects are included in \code{parameters}.
Otherwise population names are taken from those objects.}

\item{\code{transform}}{An optional transformation function to apply
to your parameter vector immediately before passing it to the
model function. If not given, then \link{as.list} is
used, as dust models require this. However, if you need to
generate derived parameters from those being actively sampled
you can do arbitrary transformations here.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-names"></a>}}
\if{latex}{\out{\hypertarget{method-names}{}}}
\subsection{Method \code{names()}}{
Return the names of the parameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$names()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-populations"></a>}}
\if{latex}{\out{\hypertarget{method-populations}{}}}
\subsection{Method \code{populations()}}{
Return the names of the populations
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$populations()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summary"></a>}}
\if{latex}{\out{\hypertarget{method-summary}{}}}
\subsection{Method \code{summary()}}{
Return a \code{data.frame} with information about
parameters (name, min, max, discrete, fixed or varied).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$summary(population = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{population}}{Specifies which population to summarise. If \code{NULL}
then returns a summary of each population as a list.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-initial"></a>}}
\if{latex}{\out{\hypertarget{method-initial}{}}}
\subsection{Method \code{initial()}}{
Return the initial parameter values as a named matrix with
rows corresponding to populations and columns are parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$initial()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prior"></a>}}
\if{latex}{\out{\hypertarget{method-prior}{}}}
\subsection{Method \code{prior()}}{
Compute the prior(s) for a parameter matrix. Returns a
named vector with names corresponding to populations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$prior(theta)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{a parameter matrix with columns in the same order as
\verb{$names()} and rows in the same order as \verb{$populations()}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-propose"></a>}}
\if{latex}{\out{\hypertarget{method-propose}{}}}
\subsection{Method \code{propose()}}{
This proposes a new parameter matrix given your current
matrix and the variance-covariance matrices of the proposal
kernels, discretises any discrete values, and reflects bounded
parameters until they lie within \code{min}:\code{max}. Returns matrix with rows
corresponding to populations and columns to parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$propose(theta, type, scale = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{a parameter matrix with columns in the same order as
\verb{$names()} and rows in the same order as \verb{$populations()}.}

\item{\code{type}}{specifies which type of parameters should be proposed,
either fixed parameters only ("fixed"), varied only ("varied"), or
both ("both") types. For 'fixed' and 'varied', parameters of the
other type are left unchanged.}

\item{\code{scale}}{an optional scaling factor to apply to the
proposal distribution. This may be useful in sampling starting
points. The parameter is equivalent to a multiplicative factor
applied to the variance covariance matrix.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-model"></a>}}
\if{latex}{\out{\hypertarget{method-model}{}}}
\subsection{Method \code{model()}}{
Apply the model transformation function to a parameter
matrix.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$model(theta)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{a parameter matrix with columns in the same order as
\verb{$names()} and rows in the same order as \verb{$populations()}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fix"></a>}}
\if{latex}{\out{\hypertarget{method-fix}{}}}
\subsection{Method \code{fix()}}{
Set some parameters to fixed values. Use this to
reduce the dimensionality of your system.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_nested$fix(fixed)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fixed}}{a named vector of parameters to fix}
}
\if{html}{\out{</div>}}
}
}
}
