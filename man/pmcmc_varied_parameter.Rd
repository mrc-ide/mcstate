% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmcmc_varied_parameter.R
\name{pmcmc_varied_parameter}
\alias{pmcmc_varied_parameter}
\title{Describe varying pmcmc parameter}
\usage{
pmcmc_varied_parameter(
  name,
  populations,
  initial,
  min = -Inf,
  max = Inf,
  discrete = FALSE,
  prior = NULL
)
}
\arguments{
\item{name}{Name for the parameter (a string)}

\item{populations}{The name of the populations for which different values
of the parameter are being estimated for, length \code{n_pop}.}

\item{initial}{Initial value(s) for the parameter. Must be either length
\code{n_pop} or \code{1}, in which case the same value is assumed for all
populations.}

\item{min}{Optional minimum value(s) for the parameter (otherwise
\code{-Inf}). If given, then \code{initial} must be at least this
value. Must be either length \code{n_pop} or \code{1}, in which case the same value
is assumed for all populations.}

\item{max}{Optional max value for the parameter (otherwise
\code{Inf}). If given, then \code{initial} must be at most this
value. Must be either length \code{n_pop} or \code{1}, in which case the same value
is assumed for all populations.}

\item{discrete}{Logical, indicating if this parameter is
discrete. If \code{TRUE} then the parameter will be rounded
after a new parameter is proposed.}

\item{prior}{A prior function (if not given an improper flat prior
is used - be careful!). It must be a function that takes a
single argument, being the value of this parameter. If given,
then \code{prior(initial)} must evaluate to a finite value. Must be either
length \code{n_pop} or \code{1}, in which case the same value is assumed for all
populations.}
}
\description{
Describe a varying parameter for use within the nested pmcmc. Note that
the name is not set here, but will end up being naturally defined
when used with \code{\link{pmcmc_parameters_nested}}, which collects
these together for use with \code{\link[=pmcmc]{pmcmc()}}.
}
\examples{
mcstate::pmcmc_varied_parameter(
  name = "size",
  populations = c("Europe", "America"),
  initial = c(100, 200),
  min = 0,
  max = Inf,
  discrete = TRUE,
  prior = list(dnorm, dexp))
}
