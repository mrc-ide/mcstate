% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmcmc_tools.R
\name{pmcmc_thin}
\alias{pmcmc_thin}
\alias{pmcmc_sample}
\title{Thin a pmcmc chain}
\usage{
pmcmc_thin(object, burnin = NULL, thin = NULL)

pmcmc_sample(object, n_sample, burnin = NULL)
}
\arguments{
\item{object}{Results of running \code{\link[=pmcmc]{pmcmc()}}}

\item{burnin}{Optional integer number of iterations to discard as
"burn-in". If given then samples \code{1:burnin} will be excluded
from your results. It is an error if this is not a positive
integer or is greater than or equal to the number of samples
(i.e., there must be at least one sample remaining after
discarding burnin).}

\item{thin}{Optional integer thinning factor. If given, then every
\code{thin}'th sample is retained (e.g., if \code{thin} is 10 then we keep
samples 1, 11, 21, ...).  Note that this can produce surprising
results as it will always select the first sample but not
necessarily always the last.}

\item{n_sample}{The number of samples to draw from \code{object} \emph{with
replacement}. This means that \code{n_sample} can be larger than the
total number of samples taken (though it probably should not)}
}
\description{
Thin results of running \code{\link[=pmcmc]{pmcmc()}}. This function may be useful
before using \code{\link[=pmcmc_predict]{pmcmc_predict()}}, or before saving pmcmc output to
disk.  \code{pmcmc_thin} takes every \code{thin}'th sample, while
\code{pmcmc_sample} randomly selects a total of \code{n_sample} samples.
}
