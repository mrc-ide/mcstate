% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deterministic_state.R
\name{particle_deterministic_state}
\alias{particle_deterministic_state}
\title{Deterministic particle state}
\description{
Deterministic particle internal state. This object is
not ordinarily constructed directly by users, but via the
\verb{$run_begin} method to \link{particle_deterministic}. It
provides an advanced interface to the deterministic particle
that allows partially running over part of the time trajectory.

This state object has a number of public fields that you can read
but must not write (they are not read-only so you \emph{could} write
them, but don't).
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model}}{The dust model being simulated}

\item{\code{history}}{The particle history, if created with
\code{save_history = TRUE}.}

\item{\code{restart_state}}{Full model state at a series of points in
time, if the model was created with non-\code{NULL} \code{save_restart}.
This is a 3d array as described in \link{particle_filter}}

\item{\code{log_likelihood}}{The log-likelihood so far. This starts at
0 when initialised and accumulates value for each step taken.}

\item{\code{current_step_index}}{The index of the last completed step.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{particle_deterministic_state$new()}}
\item \href{#method-run}{\code{particle_deterministic_state$run()}}
\item \href{#method-step}{\code{particle_deterministic_state$step()}}
\item \href{#method-fork_multistage}{\code{particle_deterministic_state$fork_multistage()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialise the deterministic particle state. Ordinarily
this should not be called by users, and so arguments are barely
documented.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{particle_deterministic_state$new(
  pars,
  generator,
  model,
  data,
  data_split,
  steps,
  n_threads,
  initial,
  index,
  compare,
  save_history,
  save_restart
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pars}}{Parameters for a single phase}

\item{\code{generator}}{A dust generator object}

\item{\code{model}}{If the generator has previously been initialised}

\item{\code{data}}{A \link{particle_filter_data} data object}

\item{\code{data_split}}{The same data as \code{data} but split by step}

\item{\code{steps}}{A matrix of step beginning and ends}

\item{\code{n_threads}}{The number of threads to use}

\item{\code{initial}}{Initial condition function (or \code{NULL})}

\item{\code{index}}{Index function (or \code{NULL})}

\item{\code{compare}}{Compare function}

\item{\code{save_history}}{Logical, indicating if we should save history}

\item{\code{save_restart}}{Vector of steps to save restart at}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\if{latex}{\out{\hypertarget{method-run}{}}}
\subsection{Method \code{run()}}{
Run the deterministic particle to the end of the data.
This is a convenience function around \verb{$step()} which provides the
correct value of \code{step_index}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{particle_deterministic_state$run()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-step"></a>}}
\if{latex}{\out{\hypertarget{method-step}{}}}
\subsection{Method \code{step()}}{
Take a step with the deterministic particle. This moves
the system forward one step within the \emph{data} (which
may correspond to more than one step with your model) and
returns the likelihood so far.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{particle_deterministic_state$step(step_index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{step_index}}{The step \emph{index} to move to. This is not the same
as the model step, nor time, so be careful (it's the index within
the data provided to the filter). It is an error to provide
a value here that is lower than the current step index, or past
the end of the data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fork_multistage"></a>}}
\if{latex}{\out{\hypertarget{method-fork_multistage}{}}}
\subsection{Method \code{fork_multistage()}}{
Create a new \code{deterministic_particle_state} object based
on this one (same model, position in time within the data) but with
new parameters, to support the "multistage particle filter".
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{particle_deterministic_state$fork_multistage(pars, transform_state)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pars}}{New model parameters}

\item{\code{transform_state}}{A function to transform the model state
from the old to the new parameter set.  See
\code{\link[=multistage_epoch]{multistage_epoch()}} for details.}
}
\if{html}{\out{</div>}}
}
}
}
